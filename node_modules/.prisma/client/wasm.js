
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ClassScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SectionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  classId: 'classId'
};

exports.Prisma.StudentScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  genderId: 'genderId',
  fatherName: 'fatherName',
  motherName: 'motherName',
  fatherOccupation: 'fatherOccupation',
  motherOccupation: 'motherOccupation',
  mobileNumber: 'mobileNumber',
  motherMobileNumber: 'motherMobileNumber',
  fatherEmail: 'fatherEmail',
  address: 'address',
  isTransportRequired: 'isTransportRequired',
  classId: 'classId',
  sectionId: 'sectionId'
};

exports.Prisma.FeeDetailsScalarFieldEnum = {
  id: 'id',
  studentId: 'studentId',
  totalFee: 'totalFee',
  discountAmount: 'discountAmount',
  totalTerms: 'totalTerms',
  remainingAmount: 'remainingAmount'
};

exports.Prisma.TermScalarFieldEnum = {
  id: 'id',
  feeId: 'feeId',
  termNumber: 'termNumber',
  amount: 'amount',
  dueDate: 'dueDate',
  isPaid: 'isPaid'
};

exports.Prisma.SubjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  classId: 'classId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MasterDropdownScalarFieldEnum = {
  id: 'id',
  type: 'type',
  value: 'value'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  genderId: 'genderId',
  qualificationId: 'qualificationId',
  departmentId: 'departmentId',
  designationId: 'designationId',
  staffTypeId: 'staffTypeId',
  experience: 'experience',
  mobileNumber: 'mobileNumber',
  email: 'email',
  username: 'username',
  password: 'password',
  salary: 'salary',
  isActive: 'isActive',
  isTransportRequired: 'isTransportRequired',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TimePeriodScalarFieldEnum = {
  id: 'id',
  periodName: 'periodName',
  subject: 'subject',
  startDate: 'startDate',
  endDate: 'endDate',
  startTime: 'startTime',
  endTime: 'endTime',
  teacherId: 'teacherId',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.ClassOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.SectionOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.StudentOrderByRelevanceFieldEnum = {
  username: 'username',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  fatherName: 'fatherName',
  motherName: 'motherName',
  fatherOccupation: 'fatherOccupation',
  motherOccupation: 'motherOccupation',
  mobileNumber: 'mobileNumber',
  motherMobileNumber: 'motherMobileNumber',
  fatherEmail: 'fatherEmail',
  address: 'address'
};

exports.Prisma.SubjectOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code'
};

exports.Prisma.MasterDropdownOrderByRelevanceFieldEnum = {
  type: 'type',
  value: 'value'
};

exports.Prisma.StaffOrderByRelevanceFieldEnum = {
  firstName: 'firstName',
  lastName: 'lastName',
  experience: 'experience',
  mobileNumber: 'mobileNumber',
  email: 'email',
  username: 'username',
  password: 'password'
};

exports.Prisma.TimePeriodOrderByRelevanceFieldEnum = {
  periodName: 'periodName',
  subject: 'subject',
  startTime: 'startTime',
  endTime: 'endTime'
};


exports.Prisma.ModelName = {
  Class: 'Class',
  Section: 'Section',
  Student: 'Student',
  FeeDetails: 'FeeDetails',
  Term: 'Term',
  Subject: 'Subject',
  MasterDropdown: 'MasterDropdown',
  Staff: 'Staff',
  TimePeriod: 'TimePeriod'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
